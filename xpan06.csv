
/*
---------------------------------------
# ✅ xpan006
# ✅ Pandas criado: 2021/10/27
# ✅ Objetivo:sql server - PANDAS Lib
---------------------------------------*/
CREATE proc [dbo].[xpan006]
AS
/*
# pd.read_csv to DataFrame - X1PAN06 - 2021/07/09
-------------------------------------------------
import pandas as pd 
 df = pd.read_csv("e:\\@@pandas\\bank.txt", encoding="UTF-8", sep=";")

 print(df.head(2))
   age         job  marital  education default  balance housing loan  \
0   30  unemployed  married    primary      no     1787      no   no   
1   33    services  married  secondary      no     4789     yes  yes   

    contact  day month  duration  campaign  pdays  previous poutcome   y  
0  cellular   19   oct        79         1     -1         0  unknown  no  
1  cellular   11   may       220         1    339         4  failure  no  

       print(df.keys())
Index(['age', 'job', 'marital', 'education', 'default', 'balance', 'housing',
       'loan', 'contact', 'day', 'month', 'duration', 'campaign', 'pdays',
       'previous', 'poutcome', 'y'],
      dtype='object')

# DataFrame loc = select * from row, col


print(df.loc[0,:])              # print todos os campos da (row)-0
age                  30
job          unemployed
marital         married
education       primary
default              no
balance            1787
housing              no
loan                 no
contact        cellular
day                  19
month               oct
duration             79
campaign              1
pdays                -1
previous              0
poutcome        unknown
y                    no
Name: 0, dtype: object

print(df.loc[1,:])                           # print todos os campos da (row)-1
 print(df.loc[[1,2,4],:])                    # print todos os campos da (row)-1,2,4   
 print(df.loc[0:7,:])                        # print todos os campos da (row)0..a.7
 print(df.loc[:, 'job'])                     # print todas as (rows) da column
 print(df.loc[:, 'age'])                     # print todas as (rows) da column age
 print(df.loc[:, ['age', 'job']])            # print todas as (rows) das columns
 print(df.loc[:, 'age':'default'])           #- print todas as (rows) no range das columns
 print(df.loc[df.job=='technician', :])      # print todas as (rows) where job=='technician'
 print(df.loc[df.job=='technician','age'])   # print todas as (rows) da column "age" job tech
print(df.iloc[:, [0, 4]])                    # print todas as (rows) da column 0,4
print(df.iloc[:,  0: 4])                     # print todas as (rows) da column 0..a..4

df.isna().head()
df.notna().head()
print(df.isna().age.head(1000))
print(df.notna().age.head(1000))
print(df.isna().head())
print(df.notna().head())
df.isnull().sum()
df.max()
df.min()
df.groupby("age")["balance"].sum()            # groupby - sum() 
df.sort_values(by = "balance").head(10)       # sort_values
steps = pd.Series([4216,3867,7934,4180,5144]) # Series
steps
0    4216
1    3867
2    7934
3    4180
4    5144
dtype: int64                                  # type(steps) 
type(steps)
pandas.core.series.Series

steps.values                                  # step.values
array([4216, 3867, 7934, 4180, 5144], dtype=int64)

steps.index                                   # step.index
RangeIndex(start=0, stop=5, step=1)

steps = pd.Series(data=[4216,3867,7934,4180,5144], index=['seg','ter','qua','qui','sex'])
steps
seg    4216
ter    3867
qua    7934
qui    4180
sex    5144
dtype: int64
steps.max()
steps.min()
3867
steps.mean()
steps.sum()
25341
steps.describe()
count       5.000000
mean     5068.200000
std      1671.569681
min      3867.000000
25%      4180.000000
50%      4216.000000
75%      5144.000000
max      7934.000000
dtype: float64
steps.shape
(5,)
df.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 4521 entries, 0 to 4520
Data columns (total 17 columns):
 #   Column     Non-Null Count  Dtype 
---  ------     --------------  ----- 
 0   age        4521 non-null   int64 
 1   job        4521 non-null   object
 2   marital    4521 non-null   object
 3   education  4521 non-null   object
 4   default    4521 non-null   object
 5   balance    4521 non-null   int64 
 6   housing    4521 non-null   object
 7   loan       4521 non-null   object
 8   contact    4521 non-null   object
 9   day        4521 non-null   int64 
 10  month      4521 non-null   object
 11  duration   4521 non-null   int64 
 12  campaign   4521 non-null   int64 
 13  pdays      4521 non-null   int64 
 14  previous   4521 non-null   int64 
 15  poutcome   4521 non-null   object
 16  y          4521 non-null   object
dtypes: int64(7), object(10)
memory usage: 600.6+ KB
*/